import unittest

import numpy as np
from numpy.testing import assert_array_almost_equal
from potion.curve_gen.curve_conversion import (convert_absolute_to_strike_normalized_curve,
                                               convert_strike_normalized_to_fully_normalized_curve,
                                               convert_fully_normalized_to_strike_normalized_curve,
                                               convert_strike_normalized_to_absolute_curve)


class CurveConversionTestCase(unittest.TestCase):

    def test_convert_absolute_to_strike_normalized_curve(self):
        max_bankroll = 10000
        strike = 186.91
        absolute_bet_amounts = np.linspace(0.0, max_bankroll - 1, 200)
        absolute_premiums = np.asarray([
            0.0, 1.39373737, 2.7889453, 4.18562951, 5.58379577,
            6.98344991, 8.38459782, 9.78724545, 11.19139881, 12.59706397,
            14.00424707, 15.41295428, 16.82319188, 18.23496619, 19.6482836,
            21.06315057, 22.47957362, 23.89755936, 25.31711444, 26.73824562,
            28.1609597, 29.58526358, 31.01116422, 32.43866866, 33.86778404,
            35.29851755, 36.73087648, 38.16486821, 39.60050018, 41.03777995,
            42.47671514, 43.91731348, 45.35958278, 46.80353096, 48.24916602,
            49.69649606, 51.14552928, 52.596274, 54.04873861, 55.50293165,
            56.95886173, 58.41653758, 59.87596806, 61.33716212, 62.80012885,
            64.26487746, 65.73141726, 67.1997577, 68.66990837, 70.14187897,
            71.61567935, 73.09131949, 74.56880952, 76.04815969, 77.52938042,
            79.01248228, 80.49747598, 81.98437239, 83.47318256, 84.96391767,
            86.45658911, 87.95120842, 89.44778732, 90.9463377, 92.44687167,
            93.9494015, 95.45393967, 96.96049886, 98.46909196, 99.97973205,
            101.49243247, 103.00720674, 104.52406864, 106.04303216, 107.56411155,
            109.08732132, 110.6126762, 112.14019122, 113.66988165, 115.20176306,
            116.7358513, 118.27216251, 119.81071314, 121.35151994, 122.89460001,
            124.43997075, 125.98764993, 127.53765564, 129.09000637, 130.64472096,
            132.20181865, 133.76131908, 135.3232423, 136.88760878, 138.45443944,
            140.02375566, 141.59557928, 143.16993265, 144.7468386, 146.32632051,
            147.90840226, 149.49310835, 151.08046381, 152.67049431, 154.26322614,
            155.85868621, 157.45690216, 159.05790228, 160.66171563, 162.268372,
            163.877902, 165.49033703, 167.10570937, 168.72405218, 170.34539957,
            171.96978659, 173.59724932, 175.22782492, 176.86155161, 178.49846881,
            180.13861712, 181.78203842, 183.42877592, 185.07887421, 186.73237936,
            188.38933894, 190.04980215, 191.71381989, 193.38144482, 195.05273149,
            196.7277364, 198.40651817, 200.08913759, 201.77565778, 203.46614432,
            205.16066537, 206.85929188, 208.56209767, 210.2691597, 211.9805582,
            213.69637692, 215.41670331, 217.14162883, 218.87124917, 220.60566454,
            222.34498004, 224.08930594, 225.83875811, 227.59345842, 229.35353518,
            231.11912367, 232.89036668, 234.66741513, 236.45042872, 238.23957671,
            240.03503875, 241.8370058, 243.64568115, 245.46128161, 247.28403881,
            249.11420065, 250.95203298, 252.79782146, 254.65187371, 256.51452172,
            258.38612469, 260.26707218, 262.15778786, 264.05873375, 265.97041527,
            267.89338705, 269.82825982, 271.77570855, 273.73648214, 275.71141502,
            277.70144114, 279.70761098, 281.73111237, 283.77329619, 285.8357085,
            287.92013094, 290.02863224, 292.16363469, 294.32800112, 296.52515038,
            298.75921345, 301.03524846, 303.3595436, 305.74005451, 308.18705491,
            310.71413795, 313.339822, 316.0902567, 319.00407357, 322.14179414,
            325.60609571, 329.59241285, 334.54760564, 341.92786135, 389.83657512])

        bfs, strike_normalized_prems = convert_absolute_to_strike_normalized_curve(
            strike, max_bankroll, absolute_bet_amounts, absolute_premiums)
        # print('BF: {}'.format(bfs))
        # print('sn: {}'.format(strike_normalized_prems))

        expected = np.asarray([0.0, 0.00745673, 0.01492133, 0.02239382, 0.02987425, 0.03736263,
                               0.04485901, 0.05236341, 0.05987587, 0.06739642, 0.07492508,
                               0.0824619,
                               0.09000691, 0.09756014, 0.10512163, 0.11269141, 0.12026951,
                               0.12785597,
                               0.13545083, 0.14305412, 0.15066588, 0.15828615, 0.16591495,
                               0.17355234,
                               0.18119835, 0.18885302, 0.19651638, 0.20418848, 0.21186935,
                               0.21955904,
                               0.22725758, 0.23496503, 0.24268141, 0.25040678, 0.25814117,
                               0.26588463,
                               0.2736372, 0.28139893, 0.28916986, 0.29695004, 0.30473951,
                               0.31253832,
                               0.32034652, 0.32816415, 0.33599127, 0.34382792, 0.35167416,
                               0.35953003,
                               0.36739558, 0.37527087, 0.38315595, 0.39105088, 0.3989557,
                               0.40687047,
                               0.41479525, 0.4227301, 0.43067506, 0.43863021, 0.44659559,
                               0.45457128,
                               0.46255732, 0.47055379, 0.47856074, 0.48657823, 0.49460634,
                               0.50264513,
                               0.51069466, 0.51875501, 0.52682624, 0.53490842, 0.54300162,
                               0.55110592,
                               0.55922138, 0.56734809, 0.57548612, 0.58363555, 0.59179646,
                               0.59996892,
                               0.60815302, 0.61634885, 0.62455648, 0.632776, 0.64100751, 0.64925108,
                               0.65750682, 0.66577482, 0.67405516, 0.68234795, 0.69065329,
                               0.69897127,
                               0.70730201, 0.7156456, 0.72400215, 0.73237178, 0.74075458,
                               0.74915069,
                               0.75756021, 0.76598327, 0.77441998, 0.78287048, 0.79133488,
                               0.79981332,
                               0.80830594, 0.81681287, 0.82533426, 0.83387024, 0.84242096,
                               0.85098658,
                               0.85956725, 0.86816314, 0.87677439, 0.88540119, 0.89404371,
                               0.90270211,
                               0.9113766, 0.92006734, 0.92877454, 0.93749839, 0.94623911,
                               0.95499689,
                               0.96377196, 0.97256454, 0.98137486, 0.99020317, 0.9990497,
                               1.00791471,
                               1.01679847, 1.02570125, 1.03462332, 1.04356499, 1.05252654,
                               1.06150831,
                               1.07051061, 1.07953377, 1.08857816, 1.09764414, 1.10673207,
                               1.11584237,
                               1.12497544, 1.13413171, 1.14331163, 1.15251567, 1.16174431,
                               1.17099807,
                               1.18027748, 1.18958312, 1.19891555, 1.20827542, 1.21766336,
                               1.22708007,
                               1.23652626, 1.24600271, 1.25551022, 1.26504964, 1.27462189,
                               1.28422791,
                               1.29386874, 1.30354546, 1.31325922, 1.32301128, 1.33280296,
                               1.34263567,
                               1.35251095, 1.36243044, 1.37239592, 1.38240931, 1.3924727,
                               1.40258835,
                               1.41275873, 1.42298655, 1.43327477, 1.44362666, 1.45404584,
                               1.46453631,
                               1.47510254, 1.48574951, 1.49648286, 1.50730893, 1.51823496,
                               1.52926921,
                               1.54042122, 1.55170206, 1.56312468, 1.57470441, 1.58645953,
                               1.59841214,
                               1.61058931, 1.62302468, 1.63576082, 1.64885268, 1.662373, 1.67642085,
                               1.69113614, 1.70672556, 1.72351289, 1.74204749, 1.76337496,
                               1.78988607,
                               1.82937168, 2.08569138])

        assert_array_almost_equal(expected, strike_normalized_prems, decimal=7)

        self.assertRaises(ValueError, convert_absolute_to_strike_normalized_curve, 0.0,
                          max_bankroll, absolute_bet_amounts, absolute_premiums)
        self.assertRaises(ValueError, convert_absolute_to_strike_normalized_curve, strike, 0.0,
                          absolute_bet_amounts, absolute_premiums)

    def test_convert_strike_normalized_to_fully_normalized_curve(self):
        max_bankroll = 10000
        strike = 186.91
        absolute_bet_amounts = np.linspace(0.0, max_bankroll - 1, 200)
        absolute_premiums = np.asarray([
            0.0, 1.39373737, 2.7889453, 4.18562951, 5.58379577,
            6.98344991, 8.38459782, 9.78724545, 11.19139881, 12.59706397,
            14.00424707, 15.41295428, 16.82319188, 18.23496619, 19.6482836,
            21.06315057, 22.47957362, 23.89755936, 25.31711444, 26.73824562,
            28.1609597, 29.58526358, 31.01116422, 32.43866866, 33.86778404,
            35.29851755, 36.73087648, 38.16486821, 39.60050018, 41.03777995,
            42.47671514, 43.91731348, 45.35958278, 46.80353096, 48.24916602,
            49.69649606, 51.14552928, 52.596274, 54.04873861, 55.50293165,
            56.95886173, 58.41653758, 59.87596806, 61.33716212, 62.80012885,
            64.26487746, 65.73141726, 67.1997577, 68.66990837, 70.14187897,
            71.61567935, 73.09131949, 74.56880952, 76.04815969, 77.52938042,
            79.01248228, 80.49747598, 81.98437239, 83.47318256, 84.96391767,
            86.45658911, 87.95120842, 89.44778732, 90.9463377, 92.44687167,
            93.9494015, 95.45393967, 96.96049886, 98.46909196, 99.97973205,
            101.49243247, 103.00720674, 104.52406864, 106.04303216, 107.56411155,
            109.08732132, 110.6126762, 112.14019122, 113.66988165, 115.20176306,
            116.7358513, 118.27216251, 119.81071314, 121.35151994, 122.89460001,
            124.43997075, 125.98764993, 127.53765564, 129.09000637, 130.64472096,
            132.20181865, 133.76131908, 135.3232423, 136.88760878, 138.45443944,
            140.02375566, 141.59557928, 143.16993265, 144.7468386, 146.32632051,
            147.90840226, 149.49310835, 151.08046381, 152.67049431, 154.26322614,
            155.85868621, 157.45690216, 159.05790228, 160.66171563, 162.268372,
            163.877902, 165.49033703, 167.10570937, 168.72405218, 170.34539957,
            171.96978659, 173.59724932, 175.22782492, 176.86155161, 178.49846881,
            180.13861712, 181.78203842, 183.42877592, 185.07887421, 186.73237936,
            188.38933894, 190.04980215, 191.71381989, 193.38144482, 195.05273149,
            196.7277364, 198.40651817, 200.08913759, 201.77565778, 203.46614432,
            205.16066537, 206.85929188, 208.56209767, 210.2691597, 211.9805582,
            213.69637692, 215.41670331, 217.14162883, 218.87124917, 220.60566454,
            222.34498004, 224.08930594, 225.83875811, 227.59345842, 229.35353518,
            231.11912367, 232.89036668, 234.66741513, 236.45042872, 238.23957671,
            240.03503875, 241.8370058, 243.64568115, 245.46128161, 247.28403881,
            249.11420065, 250.95203298, 252.79782146, 254.65187371, 256.51452172,
            258.38612469, 260.26707218, 262.15778786, 264.05873375, 265.97041527,
            267.89338705, 269.82825982, 271.77570855, 273.73648214, 275.71141502,
            277.70144114, 279.70761098, 281.73111237, 283.77329619, 285.8357085,
            287.92013094, 290.02863224, 292.16363469, 294.32800112, 296.52515038,
            298.75921345, 301.03524846, 303.3595436, 305.74005451, 308.18705491,
            310.71413795, 313.339822, 316.0902567, 319.00407357, 322.14179414,
            325.60609571, 329.59241285, 334.54760564, 341.92786135, 389.83657512])

        bfs, strike_normalized_prems = convert_absolute_to_strike_normalized_curve(
            strike, max_bankroll, absolute_bet_amounts, absolute_premiums)
        # print('BF: {}'.format(bfs))
        # print('sn: {}'.format(strike_normalized_prems))

        expected = np.asarray([0.0, 0.00745673, 0.01492133, 0.02239382, 0.02987425, 0.03736263,
                               0.04485901, 0.05236341, 0.05987587, 0.06739642, 0.07492508,
                               0.0824619,
                               0.09000691, 0.09756014, 0.10512163, 0.11269141, 0.12026951,
                               0.12785597,
                               0.13545083, 0.14305412, 0.15066588, 0.15828615, 0.16591495,
                               0.17355234,
                               0.18119835, 0.18885302, 0.19651638, 0.20418848, 0.21186935,
                               0.21955904,
                               0.22725758, 0.23496503, 0.24268141, 0.25040678, 0.25814117,
                               0.26588463,
                               0.2736372, 0.28139893, 0.28916986, 0.29695004, 0.30473951,
                               0.31253832,
                               0.32034652, 0.32816415, 0.33599127, 0.34382792, 0.35167416,
                               0.35953003,
                               0.36739558, 0.37527087, 0.38315595, 0.39105088, 0.3989557,
                               0.40687047,
                               0.41479525, 0.4227301, 0.43067506, 0.43863021, 0.44659559,
                               0.45457128,
                               0.46255732, 0.47055379, 0.47856074, 0.48657823, 0.49460634,
                               0.50264513,
                               0.51069466, 0.51875501, 0.52682624, 0.53490842, 0.54300162,
                               0.55110592,
                               0.55922138, 0.56734809, 0.57548612, 0.58363555, 0.59179646,
                               0.59996892,
                               0.60815302, 0.61634885, 0.62455648, 0.632776, 0.64100751, 0.64925108,
                               0.65750682, 0.66577482, 0.67405516, 0.68234795, 0.69065329,
                               0.69897127,
                               0.70730201, 0.7156456, 0.72400215, 0.73237178, 0.74075458,
                               0.74915069,
                               0.75756021, 0.76598327, 0.77441998, 0.78287048, 0.79133488,
                               0.79981332,
                               0.80830594, 0.81681287, 0.82533426, 0.83387024, 0.84242096,
                               0.85098658,
                               0.85956725, 0.86816314, 0.87677439, 0.88540119, 0.89404371,
                               0.90270211,
                               0.9113766, 0.92006734, 0.92877454, 0.93749839, 0.94623911,
                               0.95499689,
                               0.96377196, 0.97256454, 0.98137486, 0.99020317, 0.9990497,
                               1.00791471,
                               1.01679847, 1.02570125, 1.03462332, 1.04356499, 1.05252654,
                               1.06150831,
                               1.07051061, 1.07953377, 1.08857816, 1.09764414, 1.10673207,
                               1.11584237,
                               1.12497544, 1.13413171, 1.14331163, 1.15251567, 1.16174431,
                               1.17099807,
                               1.18027748, 1.18958312, 1.19891555, 1.20827542, 1.21766336,
                               1.22708007,
                               1.23652626, 1.24600271, 1.25551022, 1.26504964, 1.27462189,
                               1.28422791,
                               1.29386874, 1.30354546, 1.31325922, 1.32301128, 1.33280296,
                               1.34263567,
                               1.35251095, 1.36243044, 1.37239592, 1.38240931, 1.3924727,
                               1.40258835,
                               1.41275873, 1.42298655, 1.43327477, 1.44362666, 1.45404584,
                               1.46453631,
                               1.47510254, 1.48574951, 1.49648286, 1.50730893, 1.51823496,
                               1.52926921,
                               1.54042122, 1.55170206, 1.56312468, 1.57470441, 1.58645953,
                               1.59841214,
                               1.61058931, 1.62302468, 1.63576082, 1.64885268, 1.662373, 1.67642085,
                               1.69113614, 1.70672556, 1.72351289, 1.74204749, 1.76337496,
                               1.78988607,
                               1.82937168, 2.08569138])

        assert_array_almost_equal(expected, strike_normalized_prems, decimal=7)

        full_norm = convert_strike_normalized_to_fully_normalized_curve(strike, max_bankroll, bfs,
                                                                        strike_normalized_prems)

        # print('fn: {}'.format(full_norm))
        expected = np.asarray(
            [0.02772106, 0.02773565, 0.02775028, 0.02776495, 0.02777966, 0.02779441,
             0.02780919, 0.02782402, 0.02783888, 0.02785379, 0.02786873, 0.02788371,
             0.02789874, 0.0279138, 0.02792891, 0.02794406, 0.02795925, 0.02797448,
             0.02798976, 0.02800507, 0.02802044, 0.02803584, 0.02805129, 0.02806678,
             0.02808232, 0.0280979, 0.02811353, 0.0281292, 0.02814492, 0.02816069,
             0.0281765, 0.02819236, 0.02820827, 0.02822423, 0.02824024, 0.02825629,
             0.02827239, 0.02828855, 0.02830475, 0.02832101, 0.02833732, 0.02835368,
             0.02837009, 0.02838655, 0.02840307, 0.02841964, 0.02843627, 0.02845295,
             0.02846968, 0.02848648, 0.02850333, 0.02852023, 0.0285372, 0.02855422,
             0.0285713, 0.02858844, 0.02860564, 0.0286229, 0.02864022, 0.02865761,
             0.02867506, 0.02869257, 0.02871014, 0.02872778, 0.02874549, 0.02876326,
             0.0287811, 0.028799, 0.02881698, 0.02883502, 0.02885314, 0.02887132,
             0.02888958, 0.02890791, 0.02892631, 0.02894479, 0.02896335, 0.02898198,
             0.02900068, 0.02901947, 0.02903833, 0.02905728, 0.02907631, 0.02909541,
             0.02911461, 0.02913388, 0.02915325, 0.0291727, 0.02919224, 0.02921186,
             0.02923158, 0.02925139, 0.0292713, 0.0292913, 0.02931139, 0.02933159,
             0.02935188, 0.02937227, 0.02939276, 0.02941336, 0.02943407, 0.02945488,
             0.0294758, 0.02949683, 0.02951797, 0.02953923, 0.0295606, 0.02958209,
             0.0296037, 0.02962544, 0.0296473, 0.02966929, 0.0296914, 0.02971365,
             0.02973603, 0.02975855, 0.02978121, 0.02980401, 0.02982695, 0.02985004,
             0.02987329, 0.02989668, 0.02992024, 0.02994395, 0.02996783, 0.02999188,
             0.0300161, 0.0300405, 0.03006507, 0.03008983, 0.03011478, 0.03013992,
             0.03016525, 0.0301908, 0.03021654, 0.0302425, 0.03026868, 0.03029509,
             0.03032173, 0.0303486, 0.03037572, 0.03040309, 0.03043072, 0.03045861,
             0.03048678, 0.03051524, 0.03054398, 0.03057304, 0.0306024, 0.03063209,
             0.03066211, 0.03069248, 0.03072321, 0.03075432, 0.03078581, 0.03081771,
             0.03085003, 0.03088279, 0.030916, 0.0309497, 0.03098389, 0.0310186,
             0.03105387, 0.03108971, 0.03112616, 0.03116324, 0.031201, 0.03123947,
             0.0312787, 0.03131872, 0.0313596, 0.03140138, 0.03144413, 0.03148792,
             0.03153283, 0.03157894, 0.03162635, 0.03167517, 0.03172553, 0.03177758,
             0.03183149, 0.03188744, 0.03194568, 0.03200648, 0.03207016, 0.03213712,
             0.03220786, 0.03228297, 0.03236323, 0.03244965, 0.03254354, 0.03264673,
             0.03276177, 0.03289246, 0.03304477, 0.03322885, 0.03346405, 0.03379474,
             0.03436582, 0.03898405])

        assert_array_almost_equal(expected, full_norm, decimal=5)

        self.assertRaises(ValueError, convert_strike_normalized_to_fully_normalized_curve, 0.0,
                          max_bankroll,
                          bfs, strike_normalized_prems)
        self.assertRaises(ValueError, convert_strike_normalized_to_fully_normalized_curve, strike,
                          max_bankroll,
                          bfs, np.asarray([0.1]))

    def test_convert_fully_normalized_to_strike_normalized_curve(self):
        max_bankroll = 10000
        strike = 186.91
        bet_fractions = np.linspace(0.0, 0.99999, 200)
        fully_normalized_premiums = np.asarray(
            [0.02772106, 0.02773565, 0.02775028, 0.02776495, 0.02777966, 0.02779441,
             0.02780919, 0.02782402, 0.02783888, 0.02785379, 0.02786873, 0.02788371,
             0.02789874, 0.0279138, 0.02792891, 0.02794406, 0.02795925, 0.02797448,
             0.02798976, 0.02800507, 0.02802044, 0.02803584, 0.02805129, 0.02806678,
             0.02808232, 0.0280979, 0.02811353, 0.0281292, 0.02814492, 0.02816069,
             0.0281765, 0.02819236, 0.02820827, 0.02822423, 0.02824024, 0.02825629,
             0.02827239, 0.02828855, 0.02830475, 0.02832101, 0.02833732, 0.02835368,
             0.02837009, 0.02838655, 0.02840307, 0.02841964, 0.02843627, 0.02845295,
             0.02846968, 0.02848648, 0.02850333, 0.02852023, 0.0285372, 0.02855422,
             0.0285713, 0.02858844, 0.02860564, 0.0286229, 0.02864022, 0.02865761,
             0.02867506, 0.02869257, 0.02871014, 0.02872778, 0.02874549, 0.02876326,
             0.0287811, 0.028799, 0.02881698, 0.02883502, 0.02885314, 0.02887132,
             0.02888958, 0.02890791, 0.02892631, 0.02894479, 0.02896335, 0.02898198,
             0.02900068, 0.02901947, 0.02903833, 0.02905728, 0.02907631, 0.02909541,
             0.02911461, 0.02913388, 0.02915325, 0.0291727, 0.02919224, 0.02921186,
             0.02923158, 0.02925139, 0.0292713, 0.0292913, 0.02931139, 0.02933159,
             0.02935188, 0.02937227, 0.02939276, 0.02941336, 0.02943407, 0.02945488,
             0.0294758, 0.02949683, 0.02951797, 0.02953923, 0.0295606, 0.02958209,
             0.0296037, 0.02962544, 0.0296473, 0.02966929, 0.0296914, 0.02971365,
             0.02973603, 0.02975855, 0.02978121, 0.02980401, 0.02982695, 0.02985004,
             0.02987329, 0.02989668, 0.02992024, 0.02994395, 0.02996783, 0.02999188,
             0.0300161, 0.0300405, 0.03006507, 0.03008983, 0.03011478, 0.03013992,
             0.03016525, 0.0301908, 0.03021654, 0.0302425, 0.03026868, 0.03029509,
             0.03032173, 0.0303486, 0.03037572, 0.03040309, 0.03043072, 0.03045861,
             0.03048678, 0.03051524, 0.03054398, 0.03057304, 0.0306024, 0.03063209,
             0.03066211, 0.03069248, 0.03072321, 0.03075432, 0.03078581, 0.03081771,
             0.03085003, 0.03088279, 0.030916, 0.0309497, 0.03098389, 0.0310186,
             0.03105387, 0.03108971, 0.03112616, 0.03116324, 0.031201, 0.03123947,
             0.0312787, 0.03131872, 0.0313596, 0.03140138, 0.03144413, 0.03148792,
             0.03153283, 0.03157894, 0.03162635, 0.03167517, 0.03172553, 0.03177758,
             0.03183149, 0.03188744, 0.03194568, 0.03200648, 0.03207016, 0.03213712,
             0.03220786, 0.03228297, 0.03236323, 0.03244965, 0.03254354, 0.03264673,
             0.03276177, 0.03289246, 0.03304477, 0.03322885, 0.03346405, 0.03379474,
             0.03436582, 0.03898405])

        strike_normalized_premiums = convert_fully_normalized_to_strike_normalized_curve(
            strike, max_bankroll, bet_fractions, fully_normalized_premiums)

        expected = np.asarray([0.0, 0.00745673, 0.01492133, 0.02239382, 0.02987425, 0.03736263,
                               0.04485901, 0.05236341, 0.05987587, 0.06739642, 0.07492508,
                               0.0824619,
                               0.09000691, 0.09756014, 0.10512163, 0.11269141, 0.12026951,
                               0.12785597,
                               0.13545083, 0.14305412, 0.15066588, 0.15828615, 0.16591495,
                               0.17355234,
                               0.18119835, 0.18885302, 0.19651638, 0.20418848, 0.21186935,
                               0.21955904,
                               0.22725758, 0.23496503, 0.24268141, 0.25040678, 0.25814117,
                               0.26588463,
                               0.2736372, 0.28139893, 0.28916986, 0.29695004, 0.30473951,
                               0.31253832,
                               0.32034652, 0.32816415, 0.33599127, 0.34382792, 0.35167416,
                               0.35953003,
                               0.36739558, 0.37527087, 0.38315595, 0.39105088, 0.3989557,
                               0.40687047,
                               0.41479525, 0.4227301, 0.43067506, 0.43863021, 0.44659559,
                               0.45457128,
                               0.46255732, 0.47055379, 0.47856074, 0.48657823, 0.49460634,
                               0.50264513,
                               0.51069466, 0.51875501, 0.52682624, 0.53490842, 0.54300162,
                               0.55110592,
                               0.55922138, 0.56734809, 0.57548612, 0.58363555, 0.59179646,
                               0.59996892,
                               0.60815302, 0.61634885, 0.62455648, 0.632776, 0.64100751, 0.64925108,
                               0.65750682, 0.66577482, 0.67405516, 0.68234795, 0.69065329,
                               0.69897127,
                               0.70730201, 0.7156456, 0.72400215, 0.73237178, 0.74075458,
                               0.74915069,
                               0.75756021, 0.76598327, 0.77441998, 0.78287048, 0.79133488,
                               0.79981332,
                               0.80830594, 0.81681287, 0.82533426, 0.83387024, 0.84242096,
                               0.85098658,
                               0.85956725, 0.86816314, 0.87677439, 0.88540119, 0.89404371,
                               0.90270211,
                               0.9113766, 0.92006734, 0.92877454, 0.93749839, 0.94623911,
                               0.95499689,
                               0.96377196, 0.97256454, 0.98137486, 0.99020317, 0.9990497,
                               1.00791471,
                               1.01679847, 1.02570125, 1.03462332, 1.04356499, 1.05252654,
                               1.06150831,
                               1.07051061, 1.07953377, 1.08857816, 1.09764414, 1.10673207,
                               1.11584237,
                               1.12497544, 1.13413171, 1.14331163, 1.15251567, 1.16174431,
                               1.17099807,
                               1.18027748, 1.18958312, 1.19891555, 1.20827542, 1.21766336,
                               1.22708007,
                               1.23652626, 1.24600271, 1.25551022, 1.26504964, 1.27462189,
                               1.28422791,
                               1.29386874, 1.30354546, 1.31325922, 1.32301128, 1.33280296,
                               1.34263567,
                               1.35251095, 1.36243044, 1.37239592, 1.38240931, 1.3924727,
                               1.40258835,
                               1.41275873, 1.42298655, 1.43327477, 1.44362666, 1.45404584,
                               1.46453631,
                               1.47510254, 1.48574951, 1.49648286, 1.50730893, 1.51823496,
                               1.52926921,
                               1.54042122, 1.55170206, 1.56312468, 1.57470441, 1.58645953,
                               1.59841214,
                               1.61058931, 1.62302468, 1.63576082, 1.64885268, 1.662373, 1.67642085,
                               1.69113614, 1.70672556, 1.72351289, 1.74204749, 1.76337496,
                               1.78988607,
                               1.82937168, 2.08569138])

        assert_array_almost_equal(expected, strike_normalized_premiums, decimal=6)
        self.assertRaises(ValueError, convert_fully_normalized_to_strike_normalized_curve, 0.0,
                          max_bankroll,
                          bet_fractions, strike_normalized_premiums)

    def test_convert_strike_normalized_to_absolute_curve(self):
        max_bankroll = 10000
        strike = 186.91
        bet_fractions = np.linspace(0.0, 0.99999, 200)
        fully_normalized_premiums = np.asarray(
            [0.02772106, 0.02773565, 0.02775028, 0.02776495, 0.02777966, 0.02779441,
             0.02780919, 0.02782402, 0.02783888, 0.02785379, 0.02786873, 0.02788371,
             0.02789874, 0.0279138, 0.02792891, 0.02794406, 0.02795925, 0.02797448,
             0.02798976, 0.02800507, 0.02802044, 0.02803584, 0.02805129, 0.02806678,
             0.02808232, 0.0280979, 0.02811353, 0.0281292, 0.02814492, 0.02816069,
             0.0281765, 0.02819236, 0.02820827, 0.02822423, 0.02824024, 0.02825629,
             0.02827239, 0.02828855, 0.02830475, 0.02832101, 0.02833732, 0.02835368,
             0.02837009, 0.02838655, 0.02840307, 0.02841964, 0.02843627, 0.02845295,
             0.02846968, 0.02848648, 0.02850333, 0.02852023, 0.0285372, 0.02855422,
             0.0285713, 0.02858844, 0.02860564, 0.0286229, 0.02864022, 0.02865761,
             0.02867506, 0.02869257, 0.02871014, 0.02872778, 0.02874549, 0.02876326,
             0.0287811, 0.028799, 0.02881698, 0.02883502, 0.02885314, 0.02887132,
             0.02888958, 0.02890791, 0.02892631, 0.02894479, 0.02896335, 0.02898198,
             0.02900068, 0.02901947, 0.02903833, 0.02905728, 0.02907631, 0.02909541,
             0.02911461, 0.02913388, 0.02915325, 0.0291727, 0.02919224, 0.02921186,
             0.02923158, 0.02925139, 0.0292713, 0.0292913, 0.02931139, 0.02933159,
             0.02935188, 0.02937227, 0.02939276, 0.02941336, 0.02943407, 0.02945488,
             0.0294758, 0.02949683, 0.02951797, 0.02953923, 0.0295606, 0.02958209,
             0.0296037, 0.02962544, 0.0296473, 0.02966929, 0.0296914, 0.02971365,
             0.02973603, 0.02975855, 0.02978121, 0.02980401, 0.02982695, 0.02985004,
             0.02987329, 0.02989668, 0.02992024, 0.02994395, 0.02996783, 0.02999188,
             0.0300161, 0.0300405, 0.03006507, 0.03008983, 0.03011478, 0.03013992,
             0.03016525, 0.0301908, 0.03021654, 0.0302425, 0.03026868, 0.03029509,
             0.03032173, 0.0303486, 0.03037572, 0.03040309, 0.03043072, 0.03045861,
             0.03048678, 0.03051524, 0.03054398, 0.03057304, 0.0306024, 0.03063209,
             0.03066211, 0.03069248, 0.03072321, 0.03075432, 0.03078581, 0.03081771,
             0.03085003, 0.03088279, 0.030916, 0.0309497, 0.03098389, 0.0310186,
             0.03105387, 0.03108971, 0.03112616, 0.03116324, 0.031201, 0.03123947,
             0.0312787, 0.03131872, 0.0313596, 0.03140138, 0.03144413, 0.03148792,
             0.03153283, 0.03157894, 0.03162635, 0.03167517, 0.03172553, 0.03177758,
             0.03183149, 0.03188744, 0.03194568, 0.03200648, 0.03207016, 0.03213712,
             0.03220786, 0.03228297, 0.03236323, 0.03244965, 0.03254354, 0.03264673,
             0.03276177, 0.03289246, 0.03304477, 0.03322885, 0.03346405, 0.03379474,
             0.03436582, 0.03898405])

        strike_normalized_premiums = convert_fully_normalized_to_strike_normalized_curve(
            strike, max_bankroll, bet_fractions, fully_normalized_premiums)

        expected = np.asarray([0.0, 0.00745673, 0.01492133, 0.02239382, 0.02987425, 0.03736263,
                               0.04485901, 0.05236341, 0.05987587, 0.06739642, 0.07492508,
                               0.0824619,
                               0.09000691, 0.09756014, 0.10512163, 0.11269141, 0.12026951,
                               0.12785597,
                               0.13545083, 0.14305412, 0.15066588, 0.15828615, 0.16591495,
                               0.17355234,
                               0.18119835, 0.18885302, 0.19651638, 0.20418848, 0.21186935,
                               0.21955904,
                               0.22725758, 0.23496503, 0.24268141, 0.25040678, 0.25814117,
                               0.26588463,
                               0.2736372, 0.28139893, 0.28916986, 0.29695004, 0.30473951,
                               0.31253832,
                               0.32034652, 0.32816415, 0.33599127, 0.34382792, 0.35167416,
                               0.35953003,
                               0.36739558, 0.37527087, 0.38315595, 0.39105088, 0.3989557,
                               0.40687047,
                               0.41479525, 0.4227301, 0.43067506, 0.43863021, 0.44659559,
                               0.45457128,
                               0.46255732, 0.47055379, 0.47856074, 0.48657823, 0.49460634,
                               0.50264513,
                               0.51069466, 0.51875501, 0.52682624, 0.53490842, 0.54300162,
                               0.55110592,
                               0.55922138, 0.56734809, 0.57548612, 0.58363555, 0.59179646,
                               0.59996892,
                               0.60815302, 0.61634885, 0.62455648, 0.632776, 0.64100751, 0.64925108,
                               0.65750682, 0.66577482, 0.67405516, 0.68234795, 0.69065329,
                               0.69897127,
                               0.70730201, 0.7156456, 0.72400215, 0.73237178, 0.74075458,
                               0.74915069,
                               0.75756021, 0.76598327, 0.77441998, 0.78287048, 0.79133488,
                               0.79981332,
                               0.80830594, 0.81681287, 0.82533426, 0.83387024, 0.84242096,
                               0.85098658,
                               0.85956725, 0.86816314, 0.87677439, 0.88540119, 0.89404371,
                               0.90270211,
                               0.9113766, 0.92006734, 0.92877454, 0.93749839, 0.94623911,
                               0.95499689,
                               0.96377196, 0.97256454, 0.98137486, 0.99020317, 0.9990497,
                               1.00791471,
                               1.01679847, 1.02570125, 1.03462332, 1.04356499, 1.05252654,
                               1.06150831,
                               1.07051061, 1.07953377, 1.08857816, 1.09764414, 1.10673207,
                               1.11584237,
                               1.12497544, 1.13413171, 1.14331163, 1.15251567, 1.16174431,
                               1.17099807,
                               1.18027748, 1.18958312, 1.19891555, 1.20827542, 1.21766336,
                               1.22708007,
                               1.23652626, 1.24600271, 1.25551022, 1.26504964, 1.27462189,
                               1.28422791,
                               1.29386874, 1.30354546, 1.31325922, 1.32301128, 1.33280296,
                               1.34263567,
                               1.35251095, 1.36243044, 1.37239592, 1.38240931, 1.3924727,
                               1.40258835,
                               1.41275873, 1.42298655, 1.43327477, 1.44362666, 1.45404584,
                               1.46453631,
                               1.47510254, 1.48574951, 1.49648286, 1.50730893, 1.51823496,
                               1.52926921,
                               1.54042122, 1.55170206, 1.56312468, 1.57470441, 1.58645953,
                               1.59841214,
                               1.61058931, 1.62302468, 1.63576082, 1.64885268, 1.662373, 1.67642085,
                               1.69113614, 1.70672556, 1.72351289, 1.74204749, 1.76337496,
                               1.78988607,
                               1.82937168, 2.08569138])

        assert_array_almost_equal(expected, strike_normalized_premiums, decimal=6)

        abs_bankrolls, abs_premiums = convert_strike_normalized_to_absolute_curve(
            strike, max_bankroll, bet_fractions, strike_normalized_premiums)

        expected_bankrolls = np.linspace(0.0, 9999.9, 200)
        expected_premiums = np.asarray([
            0.0, 1.39373737, 2.7889453, 4.18562951, 5.58379577,
            6.98344991, 8.38459782, 9.78724545, 11.19139881, 12.59706397,
            14.00424707, 15.41295428, 16.82319188, 18.23496619, 19.6482836,
            21.06315057, 22.47957362, 23.89755936, 25.31711444, 26.73824562,
            28.1609597, 29.58526358, 31.01116422, 32.43866866, 33.86778404,
            35.29851755, 36.73087648, 38.16486821, 39.60050018, 41.03777995,
            42.47671514, 43.91731348, 45.35958278, 46.80353096, 48.24916602,
            49.69649606, 51.14552928, 52.596274, 54.04873861, 55.50293165,
            56.95886173, 58.41653758, 59.87596806, 61.33716212, 62.80012885,
            64.26487746, 65.73141726, 67.1997577, 68.66990837, 70.14187897,
            71.61567935, 73.09131949, 74.56880952, 76.04815969, 77.52938042,
            79.01248228, 80.49747598, 81.98437239, 83.47318256, 84.96391767,
            86.45658911, 87.95120842, 89.44778732, 90.9463377, 92.44687167,
            93.9494015, 95.45393967, 96.96049886, 98.46909196, 99.97973205,
            101.49243247, 103.00720674, 104.52406864, 106.04303216, 107.56411155,
            109.08732132, 110.6126762, 112.14019122, 113.66988165, 115.20176306,
            116.7358513, 118.27216251, 119.81071314, 121.35151994, 122.89460001,
            124.43997075, 125.98764993, 127.53765564, 129.09000637, 130.64472096,
            132.20181865, 133.76131908, 135.3232423, 136.88760878, 138.45443944,
            140.02375566, 141.59557928, 143.16993265, 144.7468386, 146.32632051,
            147.90840226, 149.49310835, 151.08046381, 152.67049431, 154.26322614,
            155.85868621, 157.45690216, 159.05790228, 160.66171563, 162.268372,
            163.877902, 165.49033703, 167.10570937, 168.72405218, 170.34539957,
            171.96978659, 173.59724932, 175.22782492, 176.86155161, 178.49846881,
            180.13861712, 181.78203842, 183.42877592, 185.07887421, 186.73237936,
            188.38933894, 190.04980215, 191.71381989, 193.38144482, 195.05273149,
            196.7277364, 198.40651817, 200.08913759, 201.77565778, 203.46614432,
            205.16066537, 206.85929188, 208.56209767, 210.2691597, 211.9805582,
            213.69637692, 215.41670331, 217.14162883, 218.87124917, 220.60566454,
            222.34498004, 224.08930594, 225.83875811, 227.59345842, 229.35353518,
            231.11912367, 232.89036668, 234.66741513, 236.45042872, 238.23957671,
            240.03503875, 241.8370058, 243.64568115, 245.46128161, 247.28403881,
            249.11420065, 250.95203298, 252.79782146, 254.65187371, 256.51452172,
            258.38612469, 260.26707218, 262.15778786, 264.05873375, 265.97041527,
            267.89338705, 269.82825982, 271.77570855, 273.73648214, 275.71141502,
            277.70144114, 279.70761098, 281.73111237, 283.77329619, 285.8357085,
            287.92013094, 290.02863224, 292.16363469, 294.32800112, 296.52515038,
            298.75921345, 301.03524846, 303.3595436, 305.74005451, 308.18705491,
            310.71413795, 313.339822, 316.0902567, 319.00407357, 322.14179414,
            325.60609571, 329.59241285, 334.54760564, 341.92786135, 389.83657512])

        assert_array_almost_equal(expected_bankrolls, abs_bankrolls, decimal=8)
        assert_array_almost_equal(expected_premiums, abs_premiums, decimal=4)
        self.assertTrue(True)


if __name__ == '__main__':
    unittest.main()
